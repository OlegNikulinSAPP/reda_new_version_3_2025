import wx
import wx.lib.scrolledpanel as scrolled
from PIL import Image, ImageDraw, ImageFont
import io
import os


class EmojiMixin:
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ü–≤–µ—Ç–Ω—ã—Ö —ç–º–æ–¥–∑–∏ –≤ wxPython"""

    def create_emoji_bitmap(self, emoji_text, font_size=14, size=(24, 24)):
        """–°–æ–∑–¥–∞–µ—Ç bitmap —Å —Ü–≤–µ—Ç–Ω—ã–º —ç–º–æ–¥–∑–∏"""
        try:
            # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º —Ñ–æ–Ω–æ–º
            image = Image.new('RGBA', size, (0, 0, 0, 0))
            draw = ImageDraw.Draw(image)

            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à—Ä–∏—Ñ—Ç —Å —ç–º–æ–¥–∑–∏
            try:
                font = ImageFont.truetype("seguiemj.ttf", font_size)
            except:
                try:
                    font = ImageFont.truetype("Apple Color Emoji", font_size)
                except:
                    try:
                        font = ImageFont.truetype("NotoColorEmoji.ttf", font_size)
                    except:
                        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à—Ä–∏—Ñ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
                        font = ImageFont.load_default()

            # –†–∏—Å—É–µ–º —ç–º–æ–¥–∑–∏
            bbox = draw.textbbox((0, 0), emoji_text, font=font)
            text_width = bbox[2] - bbox[0]
            text_height = bbox[3] - bbox[1]
            position = ((size[0] - text_width) // 2, (size[1] - text_height) // 2)

            draw.text(position, emoji_text, font=font, embedded_color=True)

            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PIL Image –≤ wx.Bitmap
            buffer = io.BytesIO()
            image.save(buffer, format="PNG")
            buffer.seek(0)
            return wx.Bitmap(wx.Image(buffer))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —ç–º–æ–¥–∑–∏: {e}")
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π bitmap –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            return wx.Bitmap(size[0], size[1])

    def create_emoji_button(self, parent, emoji_text, label_text, size=(140, 40)):
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å —ç–º–æ–¥–∑–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º"""
        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏
        panel = wx.Panel(parent, size=size)
        panel.SetBackgroundColour(wx.SystemSettings.GetColour(wx.SYS_COLOUR_BTNFACE))

        # –°–æ–∑–¥–∞–µ–º sizer –¥–ª—è –ø–∞–Ω–µ–ª–∏
        sizer = wx.BoxSizer(wx.HORIZONTAL)

        # –°–æ–∑–¥–∞–µ–º bitmap —Å —ç–º–æ–¥–∑–∏
        emoji_bitmap = self.create_emoji_bitmap(emoji_text, 16, (20, 20))
        emoji_ctrl = wx.StaticBitmap(panel, bitmap=emoji_bitmap)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç
        text_ctrl = wx.StaticText(panel, label=label_text)

        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ sizer
        sizer.Add(emoji_ctrl, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 5)
        sizer.Add(text_ctrl, 1, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 5)

        panel.SetSizer(sizer)

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—É—é –∫–Ω–æ–ø–∫—É –ø–æ–≤–µ—Ä—Ö –ø–∞–Ω–µ–ª–∏
        button = wx.Button(parent, label="", size=size)
        button.SetBackgroundColour(wx.NullColour)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: wx.NullColour –≤–º–µ—Å—Ç–æ wx.TRANSPARENT

        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–∫–∏
        button.Bind(wx.EVT_BUTTON, lambda event: self.on_button_click(label_text))

        return button, panel

    def on_button_click(self, button_name):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏"""
        print(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: {button_name}")


class MyFrame(wx.Frame, EmojiMixin):
    def __init__(self):
        super().__init__(None, title="–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ü–≠–î",
                         style=wx.DEFAULT_FRAME_STYLE, size=(1600, 900))

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
        self.SetMinSize((1400, 700))

        # –°–æ–∑–¥–∞–µ–º Notebook (–±–ª–æ–∫–Ω–æ—Ç —Å –≤–∫–ª–∞–¥–∫–∞–º–∏)
        self.notebook = wx.Notebook(self)

        # –°–æ–∑–¥–∞–µ–º —á–µ—Ç—ã—Ä–µ –≤–∫–ª–∞–¥–∫–∏
        self.tab1 = wx.Panel(self.notebook)
        self.tab2 = wx.Panel(self.notebook)
        self.tab3 = wx.Panel(self.notebook)
        self.tab4 = wx.Panel(self.notebook)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª–∏ –≤ –±–ª–æ–∫–Ω–æ—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≤–∫–ª–∞–¥–æ–∫
        self.notebook.AddPage(self.tab1, "–û—Å–Ω–æ–≤–Ω–∞—è")
        self.notebook.AddPage(self.tab2, "–í—Ç–æ—Ä–∞—è")
        self.notebook.AddPage(self.tab3, "–¢—Ä–µ—Ç—å—è")
        self.notebook.AddPage(self.tab4, "–ß–µ—Ç–≤–µ—Ä—Ç–∞—è")

        # –ù–∞ –ø–µ—Ä–≤–æ–π –≤–∫–ª–∞–¥–∫–µ —Å–æ–∑–¥–∞–µ–º —á–µ—Ç—ã—Ä–µ –∫–æ–ª–æ–Ω–∫–∏
        self.create_four_columns_on_tab1()

        # –ù–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∫–ª–∞–¥–∫–∞—Ö –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫–∏
        self.add_stub_to_tab(self.tab2, "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Ç–æ—Ä–æ–π –≤–∫–ª–∞–¥–∫–∏")
        self.add_stub_to_tab(self.tab3, "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç—Ä–µ—Ç—å–µ–π –≤–∫–ª–∞–¥–∫–∏")
        self.add_stub_to_tab(self.tab4, "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —á–µ—Ç–≤–µ—Ä—Ç–æ–π –≤–∫–ª–∞–¥–∫–∏")

        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ
        self.Centre()
        self.Show()

    def create_four_columns_on_tab1(self):
        """–°–æ–∑–¥–∞–µ—Ç —á–µ—Ç—ã—Ä–µ –∫–æ–ª–æ–Ω–∫–∏ –Ω–∞ –ø–µ—Ä–≤–æ–π –≤–∫–ª–∞–¥–∫–µ"""
        # –°–æ–∑–¥–∞–µ–º SplitterWindow –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –Ω–∞ –ª–µ–≤—É—é –∏ –ø—Ä–∞–≤—É—é —á–∞—Å—Ç–∏
        splitter = wx.SplitterWindow(self.tab1)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å (–∫–Ω–æ–ø–∫–∏ –∏ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
        left_panel = wx.Panel(splitter)
        left_sizer = wx.BoxSizer(wx.HORIZONTAL)

        # 1. –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –∫–Ω–æ–ø–∫–∏
        buttons_panel = wx.Panel(left_panel)
        self.create_buttons_column(buttons_panel)

        # 2. –°—Ä–µ–¥–Ω—è—è –∫–æ–ª–æ–Ω–∫–∞ - TextCtrl –∏ ListBox
        controls_panel = wx.Panel(left_panel)
        self.create_controls_column(controls_panel)

        left_sizer.Add(buttons_panel, 0, wx.EXPAND | wx.ALL, 3)
        left_sizer.Add(controls_panel, 0, wx.EXPAND | wx.ALL, 3)
        left_panel.SetSizer(left_sizer)

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞) —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
        right_panel = scrolled.ScrolledPanel(splitter)
        right_panel.SetupScrolling()
        right_sizer = wx.BoxSizer(wx.HORIZONTAL)

        # 3. –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ç–∞–±–ª–∏—Ü–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        params_panel = wx.Panel(right_panel)
        self.create_parameters_column(params_panel)

        # 4. –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ñ–æ—Ä–º–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
        search_panel = wx.Panel(right_panel)
        self.create_search_protocol_column(search_panel)

        right_sizer.Add(params_panel, 1, wx.EXPAND | wx.ALL, 3)
        right_sizer.Add(search_panel, 0, wx.EXPAND | wx.ALL, 3)
        right_panel.SetSizer(right_sizer)

        # –†–∞–∑–¥–µ–ª—è–µ–º –æ–∫–Ω–æ
        splitter.SplitVertically(left_panel, right_panel, sashPosition=400)
        splitter.SetMinimumPaneSize(400)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π sizer –¥–ª—è –ø–µ—Ä–≤–æ–π –≤–∫–ª–∞–¥–∫–∏
        tab_sizer = wx.BoxSizer(wx.VERTICAL)
        tab_sizer.Add(splitter, 1, wx.EXPAND)
        self.tab1.SetSizer(tab_sizer)

    def add_stub_to_tab(self, tab, text):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–≥–ª—É—à–∫—É –Ω–∞ –≤–∫–ª–∞–¥–∫—É"""
        sizer = wx.BoxSizer(wx.VERTICAL)
        label = wx.StaticText(tab, label=text)
        sizer.Add(label, 0, wx.ALL, 20)
        tab.SetSizer(sizer)

    def create_buttons_column(self, parent):
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–æ–Ω–∫—É —Å –∫–Ω–æ–ø–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–æ–ª–Ω—è—é—Ç –≤—Å—é –≤—ã—Å–æ—Ç—É"""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º BoxSizer, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –≤—Å—é –≤—ã—Å–æ—Ç—É
        sizer = wx.BoxSizer(wx.VERTICAL)

        # –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫ —Å —ç–º–æ–¥–∑–∏
        button_data = [
            ("üì•", "–ó–∞–≥—Ä—É–∑–∏—Ç—å"),
            ("üíæ", "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"),
            ("üßÆ", "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"),
            ("üßπ", "–û—á–∏—Å—Ç–∏—Ç—å"),
            ("üìä", "–≠–∫—Å–ø–æ—Ä—Ç"),
            ("üìÅ", "–ò–º–ø–æ—Ä—Ç"),
            ("üñ®Ô∏è", "–ü–µ—á–∞—Ç—å"),
            ("‚öôÔ∏è", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
            ("‚ùì", "–°–ø—Ä–∞–≤–∫–∞"),
            ("‚ÑπÔ∏è", "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ"),
            ("üîß", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 1"),
            ("üî®", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç 2"),
            ("üìè", "–ò–∑–º–µ—Ä–µ–Ω–∏–µ"),
            ("üìê", "–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞"),
            ("üîç", "–ü–æ–∏—Å–∫")
        ]

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
        self.buttons = []
        self.button_panels = []

        for emoji, text in button_data:
            button, button_panel = self.create_emoji_button(parent, emoji, text, size=(150, 40))
            sizer.Add(button_panel, 0, wx.EXPAND | wx.ALL, 2)
            sizer.Add(button, 0, wx.EXPAND | wx.ALL, 2)
            self.buttons.append(button)
            self.button_panels.append(button_panel)

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —Å–ø–µ–π—Å–µ—Ä, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –∑–∞–Ω–∏–º–∞–ª–∏ –≤—Å—é –≤—ã—Å–æ—Ç—É
        sizer.AddStretchSpacer(1)

        parent.SetSizer(sizer)

    def create_controls_column(self, parent):
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–æ–Ω–∫—É —Å TextCtrl –∏ ListBox, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–æ–ª–Ω—è—é—Ç –≤—Å—é –≤—ã—Å–æ—Ç—É"""
        sizer = wx.BoxSizer(wx.VERTICAL)

        # –î–æ–±–∞–≤–ª—è–µ–º TextCtrl
        self.text_ctrl = wx.TextCtrl(parent, size=(180, 25))
        sizer.Add(self.text_ctrl, 0, wx.EXPAND | wx.ALL, 3)

        # –î–æ–±–∞–≤–ª—è–µ–º ListBox, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –≤—Å—é –¥–æ—Å—Ç—É–ø–Ω—É—é –≤—ã—Å–æ—Ç—É
        self.list_box = wx.ListBox(parent, size=(180, -1))
        sizer.Add(self.list_box, 1, wx.EXPAND | wx.ALL, 3)

        parent.SetSizer(sizer)

    def create_parameters_column(self, parent):
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–æ–Ω–∫—É —Å —Ç–∞–±–ª–∏—Ü–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–ª–Ω—è–µ—Ç –≤—Å—é –≤—ã—Å–æ—Ç—É"""
        # –°–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å —ç–º–æ–¥–∑–∏
        parameters = [
            ("‚ö° –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ç–æ—Ä–∞, –í", ""),
            ("üìã –ù–æ–º–∏–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ü–≠–î", "header"),
            ("üîß –¢–∏–ø", ""),
            ("üí™ –ú–æ—â–Ω–æ—Å—Ç—å, –∫–í—Ç", ""),
            ("‚ö° –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ, –í", ""),
            ("üîå –¢–æ–∫, –ê", ""),
            ("üîÑ –ß–∞—Å—Ç–æ—Ç–∞ –≤—Ä–∞—â–µ–Ω–∏—è", ""),
            ("üìè –°–æ–ø—Ä. –æ–±–º–æ—Ç–∫–∏ (–û–º)", ""),
            ("üìä –°–æ–ø—Ä. –∏–∑–æ–ª—è—Ü–∏–∏, –ú–û–º", ""),
            ("üöÄ –ù–∞–ø—Ä. —Ä–∞–∑–≥–æ–Ω–∞, –í", ""),
            ("‚öôÔ∏è –ú–æ–º–µ–Ω—Ç –ø—Ä–æ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è", ""),
            ("‚ö° –ù–∞–ø—Ä. –∫.–∑., –í", ""),
            ("üîå –¢–æ–∫ –∫.–∑., –ê", ""),
            ("üí• –ü–æ—Ç–µ—Ä–∏ –∫.–∑., –∫–í—Ç", ""),
            ("üîå –¢–æ–∫ —Ö.—Ö., –ê", ""),
            ("‚ö° –ù–∞–ø—Ä. —Ö.—Ö., –í", ""),
            ("üí• –ü–æ—Ç–µ—Ä–∏ —Ö.—Ö., –∫–í—Ç", ""),
            ("‚è±Ô∏è –í—ã–±–µ–≥, —Å", ""),
            ("üì≥ –í–∏–±—Ä–∞—Ü–∏—è, –º–º/—Å", ""),
            ("‚öôÔ∏è –ö—Ä—É—Ç—è—â–∏–π –º–æ–º–µ–Ω—Ç", ""),
            ("üí• –ü–æ—Ç–µ—Ä–∏ –≤ –Ω–∞–≥—Ä. —Å–æ—Å—Ç.", ""),
            ("‚ö° –ò—Å–ø—ã—Ç. –Ω–∞–ø—Ä. –∏–∑–æ–ª., –í", ""),
            ("üîå –ò—Å–ø—ã—Ç. –∏–∑–æ–ª. –æ–±–º., –í", ""),
            ("‚ö° –ù–∞–ø—Ä. –æ–ø—ã—Ç–∞ –ö–ó", "")
        ]

        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        grid = wx.FlexGridSizer(len(parameters), 2, 3, 3)
        grid.AddGrowableCol(1, 1)  # –†–∞–∑—Ä–µ—à–∞–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–∏

        # –°–æ–∑–¥–∞–µ–º —à—Ä–∏—Ñ—Ç –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        bold_font = wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å–µ—Ç–∫—É
        self.param_fields = {}
        for param, param_type in parameters:
            if param_type == "header":
                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ - –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—é —à–∏—Ä–∏–Ω—É
                header = wx.StaticText(parent, label=param)
                header.SetFont(bold_font)
                grid.Add(header, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)
                grid.Add((0, 0), 0)  # –ü—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
            else:
                # –û–±—ã—á–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                label = wx.StaticText(parent, label=param)
                text_ctrl = wx.TextCtrl(parent, size=(180, -1))
                self.param_fields[param] = text_ctrl

                grid.Add(label, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)
                grid.Add(text_ctrl, 0, wx.EXPAND | wx.ALL, 3)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ç–∫—É –Ω–∞ –ø–∞–Ω–µ–ª—å
        parent.SetSizer(grid)

    def create_search_protocol_column(self, parent):
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–æ–Ω–∫—É —Å —Ñ–æ—Ä–º–æ–π –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–ª–Ω—è–µ—Ç –≤—Å—é –≤—ã—Å–æ—Ç—É"""
        sizer = wx.BoxSizer(wx.VERTICAL)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = wx.StaticText(parent, label="–ù–∞–π—Ç–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª:")
        title.SetFont(wx.Font(11, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD))
        sizer.Add(title, 0, wx.ALL, 5)

        # –¢–∞–±–ª–∏—Ü–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —Å —ç–º–æ–¥–∑–∏
        protocol_params = [
            "üß™ –ù–æ–≤—ã–π —Ç–µ—Å—Ç",
            "üìã –ù–æ–º–µ—Ä –ø—Ä–æ—Ç–æ–∫–æ–ª–∞",
            "üë• –ì—Ä—É–ø–ø–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è",
            "üî¢ –ù–æ–º–µ—Ä –≠–î",
            "üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è",
            "üõ¢Ô∏è –¢–∏–ø –º–∞—Å–ª–∞",
            "üî© –¢–∏–ø –º—É—Ñ—Ç—ã",
            "üìÖ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è",
            "üè∑Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏",
            "üìè –†–∞–¥–∏–∞–ª—å–Ω–æ–µ –±–∏–µ–Ω–∏–µ",
            "üîß –¢–∏–ø –†–¢–ò",
            "üìê –î–∏–∞–º–µ—Ç—Ä –≤–∞–ª–∞, –º–º",
            "‚ö° –¢–∏–ø –¢–ú–°/ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ç–æ—Ä–∞",
            "‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–±–∂–∞—Ç–∫–∏",
            "üìè –í—ã–ª–µ—Ç –≤–∞–ª–∞",
            "üîó –°–æ—á–ª–µ–Ω–µ–Ω–∏–µ —à–ª–∏—Ü–µ–≤—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π",
            "üîå –¢–∏–ø –±–ª–æ–∫–∞ –¢–ú–°",
            "üíæ –í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏",
            "üë§ –û–ø–µ—Ä–∞—Ç–æ—Ä"
        ]

        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
        grid = wx.FlexGridSizer(len(protocol_params), 2, 3, 3)
        grid.AddGrowableCol(0, 1)  # –†–∞–∑—Ä–µ—à–∞–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏

        # –°–æ–∑–¥–∞–µ–º —à—Ä–∏—Ñ—Ç –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
        bold_font = wx.Font(9, wx.FONTFAMILY_DEFAULT, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD)

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å–µ—Ç–∫—É (–ø–æ–ª—è –≤–≤–æ–¥–∞ –≤–º–µ—Å—Ç–æ —á–µ–∫–±–æ–∫—Å–æ–≤)
        self.protocol_fields = {}
        for param in protocol_params:
            if param == "üß™ –ù–æ–≤—ã–π —Ç–µ—Å—Ç":
                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ - –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—é —à–∏—Ä–∏–Ω—É
                header = wx.StaticText(parent, label=param)
                header.SetFont(bold_font)
                grid.Add(header, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)
                grid.Add((0, 0), 0)  # –ü—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
            else:
                # –û–±—ã—á–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞
                label = wx.StaticText(parent, label=param)
                text_ctrl = wx.TextCtrl(parent, size=(180, -1))
                self.protocol_fields[param] = text_ctrl

                grid.Add(label, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 3)
                grid.Add(text_ctrl, 0, wx.EXPAND | wx.ALL, 3)

        sizer.Add(grid, 0, wx.EXPAND | wx.ALL, 5)

        # –ö–Ω–æ–ø–∫–∏ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å —ç–º–æ–¥–∑–∏
        button_sizer = wx.BoxSizer(wx.HORIZONTAL)

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å —ç–º–æ–¥–∑–∏
        btn_save, btn_save_panel = self.create_emoji_button(parent, "üíæ", "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", size=(100, 40))
        btn_edit, btn_edit_panel = self.create_emoji_button(parent, "‚úèÔ∏è", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", size=(100, 40))

        button_sizer.Add(btn_save_panel, 0, wx.ALL, 5)
        button_sizer.Add(btn_save, 0, wx.ALL, 5)
        button_sizer.Add(btn_edit_panel, 0, wx.ALL, 5)
        button_sizer.Add(btn_edit, 0, wx.ALL, 5)

        sizer.Add(button_sizer, 0, wx.ALIGN_CENTER | wx.ALL, 5)

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —Å–ø–µ–π—Å–µ—Ä, —á—Ç–æ–±—ã —Ñ–æ—Ä–º–∞ –∑–∞–Ω–∏–º–∞–ª–∞ –≤—Å—é –≤—ã—Å–æ—Ç—É
        sizer.AddStretchSpacer(1)

        parent.SetSizer(sizer)


if __name__ == "__main__":
    app = wx.App()
    frame = MyFrame()
    app.MainLoop()
